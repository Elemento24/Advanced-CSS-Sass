.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    // We have to inherit the font properties, as by default the browsers don't give them to form elements
    font-family: inherit;
    color: inherit;
    font-size: 1.5rem;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, .5);
    border: none;
    // We are giving border-bottom initially, so when the element is focused, the other form-group is not pushed down.
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    transition: all .3s;

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, .1);
      border-bottom: 3px solid $color-primary;
    }

    // We are describing the styles that we want to apply, when the input element is focused and has an invalid value.
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    // Pseudo elements are represented with 2 colons, and are referring to elements that are on the webpage, like 
    // the input in this case, instead of the pseudo-classes.
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: .7rem;
    display: block;
    transition: all .3s;
  }

  // Here, we are making use of Adjacent sibling selector. One must note about the HTML markup when using the 
  // sibling selector. The elements that needs to be selected using the sibling selector, always comes after the
  // element that we are using to select the other element via the sibling selector.
  &__input:placeholder-shown+&__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block;
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -.4rem;

    // The radio button will be composed of 2 parts, but instead of making the markup in HTML, we are going to use
    // pseudo element using 'after' attribute.
    &::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity .2s;
    }
  }

  // As soon as we hit the radio element, it becomes checked. After selecting it, we select the sibling of the
  // checked element, and then select the child element (Pseudo Element) of the selected sibling.
  &__radio-input:checked~&__radio-label &__radio-button::after {
    opacity: 1
  }
}