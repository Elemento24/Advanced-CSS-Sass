.header {
  height: 85vh;
  background-image: linear-gradient(to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)), url(../img/hero-small.jpg);
  background-size: cover;
  background-position: top;
  position: relative;

  // When we are using supports, we just need to put the property with the value. The arguments of the value
  // can be anything. They are irrelevant for the feature query.
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    height: 95vh;
  }

  // This is the Resolution of the Apple Retina Screen, which is used as a reference here.
  // The ',' serves as a logical OR operator, i.e either of the condition if holds true, the CSS styles
  // should be applied. The second line is for Safari.
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
  only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
  only screen and (min-width: 125em) {
    background-image: linear-gradient(to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)), url(../img/hero.jpg);
  }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 90%);
    clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 90%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}